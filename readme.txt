							Используемые абстракции
class Player;
class Barrier;
class GameManager;
class Cloud;

						 Алгоритм ускорения движения препятствий

После прохождения игроком каждого препятствия увеличиваются очки и скорость движения для всех препятствий. 
Для создания разрыва между препятствиями используем временной промежуток.
При старте препятствий разрыв между ними постепенно уменьшения (т к скорость увеличивается и необходимо удерживать на экране несколько препятствий) 


				    			    class Barrier

Класс Barrier используется для создания препятствий. 

Основные свойства:
1) state: kBarrierStateActive или kBarrierStateInActive 
		Все новые объекты класса Barrier имеют не активное состояние. 
		
2) scored: true or false
		Все новые объекты класса Barrier имеют scored = false. scored - используется для правильного обновления очков после того как игрок 		преодолел очередное препятствие.
		После преодоления препятствия scored = true и вовращется в false после вызова метода 
		barrier->stop()

3) start()      Состояние меняется на активное, задается стартовая 		
		позиция (справа за экраном), задается скорость, расчитывается дистанция и время за которое препятствие должно достигнуть конечной т		очки. Запускается анимация.

4) stop()       После того как конечная точка достигнута - состояние текущего препятствия меняется на неактивное и задается его новая позиция по оси 	        Х(в невидимой точке) (kBarrierStateInActiveX)



			        			 Логика создания препятствий (GameScene.cpp)

Vector<Barrier*> _barriers - хранит все препятствия.

Используем 3 типа препятствий, один из них выбирается рандомно при создании каждого препятствия:
1) пара препятствий с промежутком посередине    kTubeTypePair
2) препятствие сверху экрана                    kTubeTypeUpper
3) препятствие снизу экрана			kTubeTypeLower
4) 						kTubeTypeNone


После создания препятствия рандомно выбирается один из его типов, задается скорость, стартовая позиция и запускается анимация движения в конечную точку.

При столкновении игрока с препятствием для каждого из них в цикле вызывается метод для остановки, список препятствий очищается, анимация останавливается, всем временным переменным переприсваиваются данные по умолчанию. 


												




				